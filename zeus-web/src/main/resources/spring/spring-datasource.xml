<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.zhubajie.devops.dao.entity"/>
        <property name="mapperLocations" value="classpath*:com/zhubajie/devops/dao/mapper/*.xml"/>
        <property name="configLocation" value="classpath:mybatis/mybatis_setting.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zhubajie.devops.dao.mapper" />
        <!-- 这里只能是beanName，直接引用bean会引发一些问题 -->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory" />
    </bean>

    <bean id="transactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager">
            <ref bean="txManager"/>
        </property>
    </bean>

    <beans profile="!online">
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
              init-method="init" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="5"/>
            <property name="minIdle" value="5"/>
            <property name="maxActive" value="50"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开removeAbandoned功能 -->
            <property name="removeAbandoned" value="true"/>
            <property name="removeAbandonedTimeout" value="1800"/>
            <!-- 1800秒，也就是30分钟 -->
            <property name="logAbandoned" value="true"/>
            <!-- 关闭abanded连接时输出错误日志 -->

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小,mysql 不使用 -->
            <property name="poolPreparedStatements" value="false"/>
            <!-- 配置监控统计拦截的filters -->
            <property name="filters" value="stat"/>
            <!-- 慢查询sql打印 -->
            <property name="connectionProperties" value="druid.stat.slowSqlMillis=200;druid.stat.logSlowSql=true"/>
        </bean>
    </beans>
    
    
    <beans profile="online">
        <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName">
                <value>java:comp/env/jndi-devops</value>
            </property>
        </bean>
    </beans>

</beans>